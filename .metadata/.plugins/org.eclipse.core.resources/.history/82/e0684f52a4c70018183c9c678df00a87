package com.jaya.springsc.security.config;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.authentication.AuthenticationProvider;
import org.springframework.security.config.annotation.authentication.builders.AuthenticationManagerBuilder;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;
import org.springframework.security.core.userdetails.UserDetailsService;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;


@EnableWebSecurity
@Configuration
public class WebSecurityConfig extends WebSecurityConfigurerAdapter{
	
	@Autowired
	private UserDetailsService userDetailsService;
	
	@Autowired
	private BCryptPasswordEncoder encoder;
	
	@Autowired
	private AuthenticationProvider customAuthProvider;
	/*@Autowired
	private DaoAuthenticationProvider daoauthenticationProvider;*/
	
	@Override
	public void configure(HttpSecurity http) throws Exception {
		
		http.authorizeRequests()
			.antMatchers("/addUser**").permitAll()
			.antMatchers("/getUser**").authenticated()
			.and()
			.httpBasic()
			.and()
			.csrf().disable();
		
	}
	
	@Override
	protected void configure(AuthenticationManagerBuilder auth) throws Exception {
		
		/*
		//auth.authenticationProvider(authenticationProvider)
		auth.authenticationProvider(daoauthenticationProvider);//.userDetailsService(userDetailsService).passwordEncoder(encoder);
*/		
		
		auth.authenticationProvider(customAuthProvider).userDetailsService(userDetailsService).passwordEncoder(encoder);
	}

}
